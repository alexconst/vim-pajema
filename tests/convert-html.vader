# Tests conversion from markdown to html

Before:
  let g:test_dir = '/tmp/vim-pajema/'
  let g:md_filename = g:test_dir . '_drafts/input_file.md'
  let g:html_filename = g:test_dir . '_drafts/input_file.html'
  let g:md_filename_bro = g:test_dir . '_drafts/input_file_bro.md'
  let g:jekyll_filename = g:test_dir . '_posts/xxxxxxxxxxxxxxxxx.markdown'
  let g:log_file = '/tmp/vader.txt'
  silent execute '!mkdir -p ' . g:test_dir . '{_drafts,_posts}'


##########################################
# check html file is created
##########################################
Given markdown;
# chap

hello

Execute (check html file is created):
# vim-pajema needs a real file with known whereabouts to work,
# so we save and open it
  execute ':w! ' . g:md_filename
  execute ':edit ' . g:md_filename
# convert to html
  normal ,h
# close markdown file
  :tabclose
# open generated html and verify it
  execute ':edit ' . g:html_filename
  AssertEqual getline('1'), '<!DOCTYPE html>'
# navigate to heading
  /<h1\>
  AssertEqual getline('.'), '<h1><span class="header-section-number">1</span> chap</h1>'
# navigate to first (and only) paragraph
  /<p\>
  AssertEqual getline('.'), '<p>hello</p>'
# "delete" both files
  ":1,$d
  "execute ':w! ' . g:md_filename
  "execute ':w! ' . g:html_filename
# close html file
  :tabclose



##########################################
# check browser opens generated html file
##########################################
Given markdown;
# chap

check that generated html file gets open in browser

Execute (check browser opens generated html file):
# clear the log file just to be sure
  execute ':tabe ' . g:log_file
  :1,$d
  :w
  :tabclose
# save the given markdown file
  execute ':w! ' . g:md_filename
# open md file
  execute ':edit ' . g:md_filename
# convert to html
  normal ,h
# open html in firefox
  normal ,p
# give it some time to refresh the sessions file
  silent execute '!sleep 5s'
# execute command that queries firefox open tabs
  let cmd = 'export firefox_session="$( echo $HOME/.mozilla/firefox/*.default )/sessionstore-backups/recovery.js"'
  let cmd = cmd . "; cat \"$firefox_session\" | jq '.\"windows\"[][\"tabs\"][][\"entries\"][][\"url\"]' | grep "
  let cmd = cmd . g:html_filename[:-1] . ' > ' . g:log_file
  silent execute '!' . cmd
# open file and assert
  execute ':tabe ' . g:log_file
  AssertEqual getline('1'), '"file:///tmp/vim-pajema/_drafts/input_file.html"'
  :tabclose


